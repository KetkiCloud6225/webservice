# This is a basic workflow to help you get started with Actions

name: Push Action

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [10.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Create zip
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - run: git archive -o webservice_${{  github.sha  }}.zip HEAD
      - run: mkdir codedeploy_files
      - run: mv webservice_${{  github.sha  }}.zip codedeploy_files
      - run: pwd
      - run: cd codedeploy_files
      - run: ls -all        
      
      - name: Install softwares
        run: |
          pwd
          ls -ltrh
          sudo apt-get update
          sudo apt-get -qy upgrade
          curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo apt-get install python3-pip
          python -m pip install --user awscliv2
          aws --version
          
          
      - name: Upload code to S3
        run: |
          cd codedeploy_files
          aws configure set region ${{ secrets.AWS_REGION }} --profile default
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
          aws s3 cp webservice_${{  github.sha  }}.zip s3://${{ secrets.S3_CODEDEPLOY_BUCKET_NAME }}

      - name: Packer build
        uses: riznob/packer-build-action@v1.5
        with:
          templateFile: 'AMI.json'
          workingDir: './ami'
          varFile: 'packer-vars.json'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
